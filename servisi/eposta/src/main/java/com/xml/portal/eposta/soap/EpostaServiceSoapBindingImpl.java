
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.xml.portal.eposta.soap;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.stereotype.Service;

import org.springframework.core.env.Environment;
import com.xml.portal.eposta.data.dao.pismo.Pismo;

import com.sun.mail.util.BASE64DecoderStream;

import javax.mail.MessagingException;
import javax.mail.internet.MimeMessage;
import javax.mail.util.ByteArrayDataSource;
import org.springframework.mail.javamail.MimeMessageHelper;

/**
 * This class was generated by Apache CXF 3.2.1 2021-02-03T12:04:53.331+01:00
 * Generated source version: 3.2.1
 * 
 */

@javax.jws.WebService(serviceName = "EpostaService", portName = "EpostaServiceSoapBinding", targetNamespace = "http://posta", wsdlLocation = "src/main/resources/data/posta.wsdl", endpointInterface = "com.xml.portal.eposta.soap.EpostaServicePortType")
@Service
public class EpostaServiceSoapBindingImpl implements EpostaServicePortType {

	private static final Logger LOG = Logger.getLogger(EpostaServiceSoapBindingImpl.class.getName());

	@Autowired
	JavaMailSenderImpl mailSender;

	@Autowired
	Environment env;

	/*
	 * (non-Javadoc)
	 * 
	 * @see posta.EpostaServicePortType#posaljiPoruku(pismo.Pismo pismo)*
	 */
	public void posaljiPoruku(Pismo pismo) {
		LOG.info("Executing operation posaljiPoruku");
		System.out.println(pismo);
		try {
			mailSender.setUsername(env.getProperty("spring.mail.username"));
			mailSender.setPassword(env.getProperty("spring.mail.password"));

			MimeMessage mimeMessage = mailSender.createMimeMessage();
			MimeMessageHelper email = new MimeMessageHelper(mimeMessage, true, "utf-8");

			email.setTo(pismo.getPrimalac());
			email.setSubject(pismo.getNaslov());
			email.setText(pismo.getSadrzaj());

			if (pismo.getTipPriloga().equals("pdf")) {
				ByteArrayDataSource dataSource = new ByteArrayDataSource(pismo.getPrilog(), "application/pdf");
				email.addAttachment("attachment." + pismo.getTipPriloga(), dataSource);
			} else if (pismo.getTipPriloga().equals("html")) {
				ByteArrayDataSource dataSource = new ByteArrayDataSource(pismo.getPrilog(), "text/html");
				email.addAttachment("attachment." + pismo.getTipPriloga(), dataSource);
			}

			mailSender.send(mimeMessage);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
